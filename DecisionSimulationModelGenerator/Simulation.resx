<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>